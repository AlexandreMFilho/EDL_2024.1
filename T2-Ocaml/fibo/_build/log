# dune exec fibo -w
# OCAMLPARAM: unset
# Shared cache: disabled
# Shared cache location: /home/micro02/.cache/dune/db
# Workspace root: /home/micro02/REPOS/EDL_2024.1/T2-Ocaml/fibo
# Auto-detected concurrency: 4
# Dune context:
#  { name = "default"
#  ; kind = "default"
#  ; profile = Dev
#  ; merlin = true
#  ; fdo_target_exe = None
#  ; build_dir = In_build_dir "default"
#  ; installed_env =
#      map
#        { "INSIDE_DUNE" :
#            "/home/micro02/REPOS/EDL_2024.1/T2-Ocaml/fibo/_build/default"
#        ; "OCAML_COLOR" : "always"
#        ; "OPAMCOLOR" : "always"
#        }
#  ; instrument_with = []
#  }
$ /usr/bin/ocamlc.opt -config > /tmp/dune_56f3b5_output
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -o bin/main.exe lib/fibo.cmxa bin/.main.eobjs/native/dune__exe__Main.cmx)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 1, characters 9-22:
> 1 | let () = print_endline fibo 5;;
>              ^^^^^^^^^^^^^
> Error: This function has type string -> unit
>        It is applied to too many arguments; maybe you forgot a `;'.
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 2, characters 8-10:
> 2 |     0::l;;
>             ^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 13-14:
> 1 | let fibo x = (
>                  ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 2, characters 8-9:
> 2 |     0::l|
>             ^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 13-14:
> 1 | let fibo x = (
>                  ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 3, characters 4-5:
> 3 |     |1::l;;
>         ^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 13-14:
> 1 | let fibo x = (
>                  ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 2, characters 8-10:
> 2 |     0::l;;
>             ^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 13-14:
> 1 | let fibo x = (
>                  ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 3, characters 8-10:
> 3 |     1::l;;
>             ^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 13-14:
> 1 | let fibo x = (
>                  ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 4, characters 4-9:
> 4 |     match l with
>         ^^^^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 13-14:
> 1 | let fibo x = (
>                  ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 4, characters 4-9:
> 4 |     match l with
>         ^^^^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 13-14:
> 1 | let fibo x = (
>                  ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 4, characters 4-9:
> 4 |     match l with
>         ^^^^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 13-14:
> 1 | let fibo x = (
>                  ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 4, characters 4-9:
> 4 |     match l with
>         ^^^^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 13-14:
> 1 | let fibo x = (
>                  ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 4, characters 4-9:
> 4 |     match l with
>         ^^^^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 17-18:
> 1 | let rec fibo x = (
>                      ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 4, characters 4-9:
> 4 |     match l with
>         ^^^^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 17-18:
> 1 | let rec fibo x = (
>                      ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 3, characters 8-10:
> 3 |     1::l;;
>             ^^
> Error: Syntax error: ')' expected
> File "bin/main.ml", line 1, characters 17-18:
> 1 | let rec fibo x = (
>                      ^
>   This '(' might be unmatched
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 5, characters 12-13:
> 5 |     |(_:: + _::_::)::l
>                 ^
> Error: Syntax error
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 5, characters 12-13:
> 5 |     |(_:: + _::_::)::l
>                 ^
> Error: Syntax error
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 5, characters 10-11:
> 5 |     |(_:: ;_::_::)::l
>               ^
> Error: Syntax error: pattern expected.
[2]
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.fibo.objs/byte -I lib/.fibo.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 5, characters 11-12:
> 5 |     |_:: + _::_:: ::l
>                ^
> Error: Syntax error
[2]
